{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/identification/connexion/connexion.component.css","webpack:///./src/app/identification/connexion/connexion.component.html","webpack:///./src/app/identification/connexion/connexion.component.ts","webpack:///./src/app/identification/inscription/inscription.component.css","webpack:///./src/app/identification/inscription/inscription.component.html","webpack:///./src/app/identification/inscription/inscription.component.ts","webpack:///./src/app/service/config/configuration.service.ts","webpack:///./src/app/service/login/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConnexionComponent } from './identification/connexion/connexion.component';\nimport { InscriptionComponent } from './identification/inscription/inscription.component';\nimport { AuthGuard } from './guard/auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'connexion', pathMatch: 'full', canActivate: [AuthGuard] },\n  { path: 'connexion', component: ConnexionComponent },\n  { path: 'inscription', component: InscriptionComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \" \\n /**\\n  * Header CSS\\n  */\\n header {\\n   position: fixed;\\n   top: 0;\\n   right: 0;\\n   left: 0;\\n   z-index: 2;\\n }\\n header ul.mui-list--inline {\\n   margin-bottom: 0;\\n }\\n header a {\\n   color: white;\\n }\\n header table {\\n   width: 100%;\\n }\\n /**\\n  * Content CSS\\n  */\\n #content-wrapper {\\n   min-height: 100%;\\n \\n   /* sticky footer */\\n   box-sizing: border-box;\\n   margin-bottom: -100px;\\n   padding-bottom: 100px;\\n }\\n /**\\n  * Footer CSS\\n  */\\n footer {\\n   box-sizing: border-box;\\n   height: 100px;\\n   background-color: #eee;\\n   border-top: 1px solid #e0e0e0;\\n   padding-top: 35px;\\n }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtDQUNDOztJQUVHO0NBQ0g7R0FDRSxnQkFBZ0I7R0FDaEIsT0FBTztHQUNQLFNBQVM7R0FDVCxRQUFRO0dBQ1IsV0FBVztFQUNaO0NBRUQ7R0FDRSxpQkFBaUI7RUFDbEI7Q0FFRDtHQUNFLGFBQWE7RUFDZDtDQUVEO0dBQ0UsWUFBWTtFQUNiO0NBR0Q7O0lBRUc7Q0FDSDtHQUNFLGlCQUFpQjs7R0FFakIsbUJBQW1CO0dBQ25CLHVCQUF1QjtHQUN2QixzQkFBc0I7R0FDdEIsc0JBQXNCO0VBQ3ZCO0NBR0Q7O0lBRUc7Q0FDSDtHQUNFLHVCQUF1QjtHQUN2QixjQUFjO0dBQ2QsdUJBQXVCO0dBQ3ZCLDhCQUE4QjtHQUM5QixrQkFBa0I7RUFDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiBcbiAvKipcbiAgKiBIZWFkZXIgQ1NTXG4gICovXG4gaGVhZGVyIHtcbiAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgIHRvcDogMDtcbiAgIHJpZ2h0OiAwO1xuICAgbGVmdDogMDtcbiAgIHotaW5kZXg6IDI7XG4gfVxuIFxuIGhlYWRlciB1bC5tdWktbGlzdC0taW5saW5lIHtcbiAgIG1hcmdpbi1ib3R0b206IDA7XG4gfVxuIFxuIGhlYWRlciBhIHtcbiAgIGNvbG9yOiB3aGl0ZTtcbiB9XG4gXG4gaGVhZGVyIHRhYmxlIHtcbiAgIHdpZHRoOiAxMDAlO1xuIH1cbiBcbiBcbiAvKipcbiAgKiBDb250ZW50IENTU1xuICAqL1xuICNjb250ZW50LXdyYXBwZXIge1xuICAgbWluLWhlaWdodDogMTAwJTtcbiBcbiAgIC8qIHN0aWNreSBmb290ZXIgKi9cbiAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICBtYXJnaW4tYm90dG9tOiAtMTAwcHg7XG4gICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XG4gfVxuIFxuIFxuIC8qKlxuICAqIEZvb3RlciBDU1NcbiAgKi9cbiBmb290ZXIge1xuICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgIGhlaWdodDogMTAwcHg7XG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlMGUwZTA7XG4gICBwYWRkaW5nLXRvcDogMzVweDtcbiB9Il19 */\"","module.exports = \"<header class=\\\"mui-appbar mui--z1\\\">\\n    <!-- Appbar HTML goes here -->\\n    <div class=\\\"mui-container\\\">\\n        <table>\\n            <tr class=\\\"mui--appbar-height\\\">\\n            <td class=\\\"mui--text-title\\\">Brand.io</td>\\n            <td class=\\\"mui--text-right\\\">\\n                <ul class=\\\"mui-list--inline mui--text-body2\\\">\\n                <li><a href=\\\"#\\\">About</a></li>\\n                <li><a routerLink=\\\"/inscription\\\" routerLinkActive=\\\"active\\\">inscription</a></li>\\n                <li><a routerLink=\\\"/connexion\\\" routerLinkActive=\\\"active\\\">connection</a></li>\\n                </ul>\\n            </td>\\n            </tr>\\n        </table>\\n    </div>\\n</header>\\n<div id=\\\"content-wrapper\\\" class=\\\"mui--text-center\\\">\\n    <!-- Content HTML goes here -->\\n    <div class=\\\"mui--appbar-height\\\"></div>\\n    <br>\\n    <br>\\n    <div class=\\\"mui--text-display3\\\">Brand.io</div>\\n    <br>\\n    <br>\\n    <button class=\\\"mui-btn mui-btn--raised\\\">Get started</button>\\n    <br>\\n    <br>\\n    <router-outlet></router-outlet>\\n\\n</div>\\n<footer>\\n    <div class=\\\"mui-container mui--text-center\\\">\\n        Made with ♥ by <a href=\\\"https://www.muicss.com\\\">MUICSS</a>\\n    </div>\\n</footer>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gofootapp-fe';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule\n} from '@angular/material';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConnexionComponent } from './identification/connexion/connexion.component';\nimport { InscriptionComponent } from './identification/inscription/inscription.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginService } from './service/login/login.service';\nimport { ConfigurationService } from './service/config/configuration.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConnexionComponent,\n    InscriptionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    // Material animation\n    BrowserAnimationsModule,\n    // Material componet\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatMenuModule,\n    // Flex Layout\n    FlexLayoutModule,\n    // Forms\n    FormsModule,\n    ReactiveFormsModule,\n    // Http\n    HttpClientModule\n  ],\n  providers: [\n    ConfigurationService,\n    LoginService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../service/login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.checkLogin();\n  }\n\n  checkLogin(): boolean {\n    // ne c'est jamais connecter\n    if (!this.loginService.isLoggedIn) {\n      this.router.navigate(['/connexion']);\n      return false;\n    }\n\n    // verification de la date\n    if (!this.loginService.checkLogedIn()) {\n      this.router.navigate(['/connexion']);\n      this.loginService.isLoggedIn = false;\n      return false;\n    }\n\n    return true;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lkZW50aWZpY2F0aW9uL2Nvbm5leGlvbi9jb25uZXhpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"mui--text-title\\\">Connexion</div>\\n\\n<div class=\\\"mui-container-fluid\\\">\\n    <form [formGroup]=\\\"connexionForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n        <div class=\\\"mui-row\\\">\\n            <div class=\\\"mui-col-md-offset-5 mui-col-md-2\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"mail\\\" formControlName=\\\"mail\\\" required>\\n                    <mat-error *ngIf=\\\"form.mail.errors?.required\\\">\\n                        mail is <strong>required</strong>\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"form.mail.errors?.mail\\\">\\n                        mail must be a <strong>valid mail address</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"mui-row\\\">\\n            <div class=\\\"mui-col-md-offset-5 mui-col-md-2\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\" required>\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                    <mat-error *ngIf=\\\"form.mail.errors?.required\\\">\\n                        password is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <br>\\n\\n        <div class=\\\"mui-row\\\">\\n            <div class=\\\"mui-col-md-offset-5 mui-col-md-2\\\">\\n                <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"loading\\\">\\n                    Register\\n                </button>\\n            </div>\\n        </div>\\n    </form>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { Login } from 'src/app/modele/login';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/service/login/login.service';\n\n\n@Component({\n  selector: 'app-connexion',\n  templateUrl: './connexion.component.html',\n  styleUrls: ['./connexion.component.css']\n})\nexport class ConnexionComponent implements OnInit {\n\n  connexionForm: FormGroup;\n  hide = true;\n  loading = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private loginService: LoginService,\n      private router: Router\n    ) { }\n\n  ngOnInit(): void {\n    this.connexionForm = this.formBuilder.group({\n      mail: ['', [\n        Validators.required,\n        Validators.email\n        ]\n      ],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n        ]\n      ]\n    });\n  }\n\n  get form() { return this.connexionForm.controls; }\n\n  async onSubmit() {\n    this.loading = true;\n\n    // stop here if form is invalid\n    if (this.connexionForm.invalid) {\n        this.loading = false;\n        return;\n    }\n\n    // verification du login sur le serveur\n    const login: Login = this.connexionForm.value;\n    const res: Boolean = await this.loginService.connexion(login);\n    if (res) {\n      this.loginService.isLoggedIn = true;\n      this.loginService.login = login;\n      this.router.navigate(['/inscription']);\n    }\n\n    // Afficher un message d'erreur dans un cadre rouge\n    console.log(res);\n    this.loading = false;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lkZW50aWZpY2F0aW9uL2luc2NyaXB0aW9uL2luc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"mui--text-title\\\">Connexion</div>\\n\\n<div class=\\\"mui-container-fluid\\\">\\n    <form [formGroup]=\\\"connexionForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n        <div class=\\\"mui-row\\\">\\n            <div class=\\\"mui-col-md-offset-5 mui-col-md-2\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n                    <mat-error *ngIf=\\\"form.email.errors?.required\\\">\\n                        Email is <strong>required</strong>\\n                    </mat-error>\\n                    <mat-error *ngIf=\\\"form.email.errors?.email\\\">\\n                        Email must be a <strong>valid email address</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"mui-row\\\">\\n            <div class=\\\"mui-col-md-offset-5 mui-col-md-2\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\" required>\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                    <mat-error *ngIf=\\\"form.email.errors?.required\\\">\\n                        password is <strong>required</strong>\\n                    </mat-error>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n\\n        <br>\\n\\n        <div class=\\\"mui-row\\\">\\n            <div class=\\\"mui-col-md-offset-5 mui-col-md-2\\\">\\n                <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"loading\\\">\\n                    Register\\n                </button>\\n            </div>\\n        </div>\\n    </form>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-inscription',\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.css']\n})\nexport class InscriptionComponent implements OnInit {\n\n  connexionForm: FormGroup;\n  submitted = false;\n  hide = true;\n  loading = false;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.connexionForm = this.formBuilder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n        ]\n      ],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n        ]\n      ]\n    });\n  }\n\n  get form() { return this.connexionForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.loading = true;\n\n    // stop here if form is invalid\n    if (this.connexionForm.invalid) {\n        return;\n    }\n\n    alert('SUCCESS!! :-)');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n\n  configUrl = 'assets/config.json';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getConfig() {\n    return this.httpClient.get(this.configUrl);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Login } from 'src/app/modele/login';\nimport { Configuration } from 'src/app/modele/configuration/configuration';\nimport { Config } from 'protractor';\nimport { ConfigurationService } from '../config/configuration.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isLoggedIn: boolean;\n  login: Login;\n  config: Configuration;\n\n  constructor(private configService: ConfigurationService, private httpClient: HttpClient) {\n    this.configService.getConfig()\n      .subscribe((data: Configuration) => {\n        this.config = data;\n      });\n  }\n\n  public async connexion(login: Login): Promise<boolean> {\n    return this.httpClient\n      .post<Boolean>(this.config.serveurUrl + this.config.loginUrl, login)\n      .toPromise()\n      .then((result: any) => {\n        return result;\n      })\n      .catch(error => {\n        console.error('ConnexionService error ', error);\n        return false;\n      });\n  }\n\n  public async checkLogedIn(): Promise<Boolean> {\n    return this.httpClient\n      .put<Boolean>(this.config.serveurUrl + this.config.loginUrl + '/' + this.login.mail, null)\n      .toPromise()\n      .then((result: any) => {\n        return result;\n      })\n      .catch(error => {\n        console.error('ConnexionService error ', error);\n        return false;\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}